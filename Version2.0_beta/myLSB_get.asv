%LSB提取秘密信息算法

clc;
clear;
key=25;%key是密钥

%读入原始秘密信息图像
file_name='best.bmp';
message=imread(file_name);
[r_message,l_message]=size(message);
message_vector=reshape(message,r_message*l_message,1);
info_hidden=zeros(size(message_vector));

%读入嵌有秘密信息的图像
cover_image=imread('info_hidden_image.bmp');
cover_image=uint8(cover_image);
% 密写后的图像的行数和列数
r_cover=size(cover_image,1);	%行数
l_cover=size(cover_image,2);	%列数
recover_image=zeros(1,r_message*l_message);

rand('state',key);
randno=randperm(r_cover*l_cover);
%fid=fopen(pfile,'w');

for i=1:(r_message*l_message)
    value=randno(1,i);
        row=ceil(value/l_cover);%求得随机整数矩阵里的值对应于再载体图像中的行位置
        col=mod(value,l_cover);%求得随机整数矩阵里的值对应于再载体图像中的列位置
        if col==0
            col=l_cover;%如果取模运算结果为0,即为最后一列
        end
       recover_image(1,i)=bitget(cover_image(row,col),1); %将所选像素点的最低位值置为二值秘密信息的相应位值
end

recover_image=reshape(recover_image,r_message,l_message);


%计算归一化相关系数Nc
%Nc=nc(message,watermark0)

figure
subplot(1,2,1)
imshow(imshow(recover_image),[]);
title('提取的秘密信息图像');
subplot(1,2,2)
imshow(message,[]);
title('原始秘密信息图像');

%fclose(fid);